module LSL
  grammar CompoundCommand
    include LSL::SingleCommand
    include LSL::File
    rule full_command
      single_command (ows "|" ows single_command)* (ows ">" ows filename)? {
        def filename
          find_child_node(:filename)
        end
        def single_commands

          res = [single_command.command_hash]
          rest = find_child_nodes(:single_command).map { |x| x.command_hash }
          #puts "rest #{rest.size}"
          res + rest
        end
        def command_hash
          res = LSL::Command::Compound.new(:commands => single_commands)
          res.output_filename = filename.text_value if filename
          res
        end
      }
    end
  end
end